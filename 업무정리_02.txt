일단 전투씬이 테스트 코드를 통해서 동작을 한다까지는 확인을 했다...

- 비주얼 적인 연출은 일단 후순위로 미룬다. 
- 전투씬이 없으면 없는대로 게임 진행은 가능하다. 



이제 전투맵에서의 움직임을 만들어 보자 .
- 


전투맵에서의 조작 처리
-턴 처리
-


전투 - Battle 
 ㄴ Combat (전투씬)
 ㄴ BattleTerrain (전투 지형)
 ㄴ BattleObject (전투 오브젝트)
 
전투씬 기능  - Combat
 -

전투맵 기능  - BattleTerrain
 - 타일맵. 
 - 에디터 기능도 필요함

스토리 기능  - Story
 - 대화, 초상화, 배경 
 - 전투맵/전투씬/월드맵의 연출이 필요할때도 여기에서 제어할 수 있어야 한다.
 - 스크립트 언어를 통해 연출 요소를 제어할 예정. (python)
 
 - 전투 유닛들 AI도 스크립트를 통해서 제어가능해야 한다. 
 


월드맵 기능  - WorldMap


버프,
 - 횟수제 버프들 사용처리는 어뜨케 할까?
 
 
BattleManager
BattleSystem
 
 ㄴ TurnManager.Update 
 ㄴ 
 
 
 BattleSystem_Turn 
  - 팀마다 완료 요청이 오면, 다음 턴으로 넘어간다.
  - 각 유닛마다 행동이 완료되었는지 체크한다. 
  
 BattleSystem_Command
  ㄴ 
 
 BattleSystem_AI
  ㄴ AI용 Command를 생성한다. 
 
  
 
 
 
 전투에서 해야할게 뭐있을까.
 
 턴을 진행한다.
  모든 진영의 움직임이 끝나면 턴을 진행한다.
  각 진영의 움직임 체크는 어떻게 하면 되려나?
   - BattleObject, IsCommandable
   
   
  턴이 종료되거나, 턴이 시작될 때 처리해야할 작업들이 있을 것이다. 
   - 어떻게 처리할지 생각좀 해보자.
   - 무난한게 EventDispatch 
   
   - 스킬 사용을 모두 Event 형식으로 교체해야하나? 통일성을 위해서??
  
  mac으로 개발환경을 이전했다.

  스킬 사용 부분을 다시 잘 해보자.
   - 스킬/버프는 situation 기반으로 동작하도록 변경하였다. 
   - 다음에 뭔 이슈가 있을지 모르겠지만 일단 여기서 마무리. 

  작업 내역
   * 턴/진영 Update 
   * 전투씬 턴 관리
   * 전투씬 데미지 처리

   - 해야 할 작업
    : 유닛별 행동 & 종료
     ㄴ 기본적으로는 공격을 하면 종료된다.
     ㄴ 몇몇 특수 유닛은 공격 후에 이동 or 공격을 한다.+


   - BattleSystem , CombatSystem, 어쨋뜬 뭔가 시스템이 있을 때 어떤 시스템을 돌릴 것인가 
   - CombatSystem은 일단 시작하고 나면 연출의 영역이기 때문에 
      모두 다 연산하고, 연출을 잘 보여주면 된다. 

   - BattleSystem도 일단 비슷하다고 생각하자.
     명령을 내리면 다 연산하고 연출로 보여주면 된다.

   - BattleSystem_Command
     * 유닛의 행동/명령을 처리한다.?
     * 이동, 공격, 상호작용 등  뭔가 다양한 동작들이 많은데...
       이걸 여기에서 모두 처리한다. 

      * 여기에서는 Command를 내리고, 완료되는 것 까지만 체크한다... 
      * 세부적인 행동로직은... 어디에 작성할까? 
        ; Command 클래스를 따로 작성.
      * Navigation에 대한 문제는 
    



   - BattleSystem_

   - Buff 지속 시간 등은 고려해봐야 할 듯 .
     * 턴 수 제한은 TurnChange 이벤트 디스패치에서 삭감해도 된다. 
     * 횟 수 제한은 실제 발동되었을 때 삭감 처리. 
       ㄴ 실제 발동되었다는 Buff.Collect 시 삭감 처리 할 수 밖에 없지 않을까.?


   - is_plan 에 대한 처리는 전역변수로 해야할 거 같은데....
     어딘가 추가를 해보자... .


- PathNodeManager
   - PathNode 도착, 관리
   - 길찾기로 생성된 Node 들이 여기에 들어있다. 

- PathVehicle업
   - Steering 에 대한 처리
   - PathNodeManager에서 PathNode를 가져온다. 
   - 이동방향 / 속도를 처리한다.

PathVehicle을 왜 작성했지??? 기억이 안나네..
이제 어떤 작업을 하면 되나?

BattleSystem_Navigation 작업을 이제 해주면 될듯.

눈으로 조작 하고 서로 싸우는게 보이게끔 하려면...
뭐뭐 해야하는지 정리해보자
    
일단 길찾기 시스템을 만들어보고 있다.
눈으로 보이는데 좋을거 같아서...

요걸 하고 나면 턴 시작 / 이동 / 공격 / 턴 종료
요렇게 한 사이클을 돌려보자.

뭔가 코드를 짜다보니까... ㄷECS스타일로 짜버렸다.... 별로인듯...
  